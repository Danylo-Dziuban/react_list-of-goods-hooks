{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isVisible","setIsVisible","visibleGoods","setVisibleGoods","className","Box","sx","m","length","Button","type","onClick","ms","mb","List","map","good","ListItem","pt","ListItemText","ButtonGroup","color","orange","reverse","sort","good1","good2","localeCompare","ReactDOM","render","document","getElementById"],"mappings":"4RAYMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAiEaC,EA9DO,WACpB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,GAAD,OAAKF,IAArD,mBAAOK,EAAP,KAAqBC,EAArB,KAEA,OACE,sBAAKC,UAAU,MAAf,UACE,uCACA,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,EAAG,GAAd,8BACoBV,EAAgBW,UAEpC,wBACe,IAAdR,GACC,cAACS,EAAA,EAAD,CACEC,KAAK,SACLC,QAAS,kBAAMV,GAAcD,IAF/B,mBAQDA,GACC,eAACK,EAAA,EAAD,CAAKC,GAAI,CAAEM,GAAI,EAAGC,GAAI,GAAtB,UACE,cAACC,EAAA,EAAD,UACGZ,EAAaa,KAAI,SAACC,GAAD,OAChB,cAACC,EAAA,EAAD,CAAUX,GAAI,CAAEY,GAAI,GAApB,SACE,cAACC,EAAA,EAAD,UAAeH,KADaA,QAKlC,eAACI,EAAA,EAAD,CAAad,GAAI,CAAEe,MAAOC,IAAO,MAAjC,UACE,cAACb,EAAA,EAAD,CACEE,QAAS,kBAAMR,EAAgB,YAAID,GAAcqB,YADnD,qBAKA,cAACd,EAAA,EAAD,CACEE,QAAS,kBAAMR,EAAgB,YAAID,GAAcsB,MAC/C,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,QAF1C,iCAOA,cAACjB,EAAA,EAAD,CACEE,QAAS,kBAAMR,EAAgB,GAAD,OAAKN,KADrC,mBAKA,cAACY,EAAA,EAAD,CACEE,QAAS,kBAAMR,EAAgB,YAAID,GAAcsB,MAC/C,SAACC,EAAOC,GAAR,OAAmBD,EAAMjB,OAASkB,EAAMlB,YAF5C,sCCrEZoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.331041cf.chunk.js","sourcesContent":["/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\nimport './App.css';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport { orange } from '@mui/material/colors';\nimport { ListItemText } from '@mui/material';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [visibleGoods, setVisibleGoods] = useState([...goodsFromServer]);\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      <Box sx={{ m: 2 }}>\n        Goods available: {goodsFromServer.length}\n      </Box>\n      <br />\n      {isVisible === false && (\n        <Button\n          type=\"button\"\n          onClick={() => setIsVisible(!isVisible)}\n        >\n          Start\n        </Button>\n      )}\n\n      {isVisible && (\n        <Box sx={{ ms: 1, mb: 0 }}>\n          <List>\n            {visibleGoods.map((good: string) => (\n              <ListItem sx={{ pt: 0 }} key={good}>\n                <ListItemText>{good}</ListItemText>\n              </ListItem>\n            ))}\n          </List>\n          <ButtonGroup sx={{ color: orange[500] }}>\n            <Button\n              onClick={() => setVisibleGoods([...visibleGoods].reverse())}\n            >\n              Reverse\n            </Button>\n            <Button\n              onClick={() => setVisibleGoods([...visibleGoods].sort(\n                (good1, good2) => good1.localeCompare(good2),\n              ))}\n            >\n              Sort alphabetically\n            </Button>\n            <Button\n              onClick={() => setVisibleGoods([...goodsFromServer])}\n            >\n              Reset\n            </Button>\n            <Button\n              onClick={() => setVisibleGoods([...visibleGoods].sort(\n                (good1, good2) => (good1.length - good2.length),\n              ))}\n            >\n              Sort by Length\n            </Button>\n          </ButtonGroup>\n\n        </Box>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}